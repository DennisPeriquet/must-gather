#!/bin/bash

BASE_COLLECTION_PATH="/must-gather"
ETCD_LOG_PATH="${BASE_COLLECTION_PATH}/etcd_info"

ETCD_CONTAINER='etcdctl'

RUNNING_ETCD_POD=$(oc get pod -n openshift-etcd --no-headers|grep Running| grep -o -m 1 '\S*etcd\S*')

# We cannot rely on ETCDCTL_ENDPOINTS on container because it may contain bootstrap VM
ETCDCTL_ENDPOINTS=$(oc exec ${RUNNING_ETCD_POD}  -n openshift-etcd -c ${ETCD_CONTAINER} -- /bin/sh -c "etcdctl member list" | awk -F', ' '{printf "%s%s",sep,$5; sep=","}')

function ocp4etcdctl {
    oc -n openshift-etcd exec -c ${ETCD_CONTAINER} ${RUNNING_ETCD_POD} -- env ETCDCTL_ENDPOINTS=${ETCDCTL_ENDPOINTS} etcdctl $@
}

if [[ -z $RUNNING_ETCD_POD ]];then
    echo "ERROR: No running etcd pods found" >&2
    exit 1
fi

echo "Getting information from pod \"${RUNNING_ETCD_POD}\", container \"${ETCD_CONTAINER}\""
echo "Using endpoints: ${ETCDCTL_ENDPOINTS}"

mkdir -p ${ETCD_LOG_PATH}

echo "INFO: Starting getting etcd information"

# member list
echo "INFO: Getting etcdctl member list"
ocp4etcdctl member list -w table > ${ETCD_LOG_PATH}/member_list.txt
ocp4etcdctl member list -w json > ${ETCD_LOG_PATH}/member_list.json

# endpoint status
echo "INFO: Getting etcdctl endpoint status"
ocp4etcdctl endpoint status -w table > ${ETCD_LOG_PATH}/endpoint_status.txt
ocp4etcdctl endpoint status -w json > ${ETCD_LOG_PATH}/endpoint_status.json

# endpoint health
echo "INFO: Getting etcdctl endpoint health"
ocp4etcdctl endpoint health -w table > ${ETCD_LOG_PATH}/endpoint_health.txt
ocp4etcdctl endpoint health -w json > ${ETCD_LOG_PATH}/endpoint_health.json

# alarm list
echo "INFO: Getting etcdctl alarm list"
ocp4etcdctl alarm list > ${ETCD_LOG_PATH}/alarm_list.txt
ocp4etcdctl alarm list -w json > ${ETCD_LOG_PATH}/alarm_list.json

# Check perf
echo "INFO: Performing etcdctl check perf"
ocp4etcdctl check perf --load="s" > ${ETCD_LOG_PATH}/etcd_check_perf.txt

echo "INFO: Done gathering etcd information"
